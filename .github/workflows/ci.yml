name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        
    - name: Lint with ruff
      run: |
        ruff check src/pymeta tests/
        
    - name: Format check with black
      run: |
        black --check src/pymeta tests/
        
    - name: Type check with mypy
      run: |
        mypy src/pymeta --ignore-missing-imports
        
    - name: Run unit tests
      run: |
        pytest -m "not slow and not optional and not viz and not integration" \
               --cov=pymeta --cov-report=xml tests/unit/
               
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-optional:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies with optional extras
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,bayes,rve,xgb]"
        
    - name: Run optional dependency tests
      run: |
        pytest -m "optional" tests/optional/ --maxfail=5
        
  test-integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        
    - name: Run integration tests
      run: |
        pytest -m "integration" tests/integration/ --maxfail=3

  test-viz:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies with viz extras
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,viz]"
        
    - name: Install system dependencies for plotting
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        
    - name: Run visualization tests
      run: |
        xvfb-run -a pytest -m "viz" tests/ --maxfail=3
        
    - name: Upload plot artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-plots
        path: |
          tests/test_outputs/
          *.png
          *.pdf
        retention-days: 7

  test-slow:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[test-slow]')
    strategy:
      matrix:
        python-version: ["3.11"]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies with all extras
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,bayes]"
        
    - name: Run slow tests
      run: |
        pytest -m "slow" tests/ --maxfail=1 --timeout=600

  build:
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build package
      run: |
        python -m build
        
    - name: Check package
      run: |
        twine check dist/*
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
        retention-days: 7

  # Documentation build job (placeholder)
  docs:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install sphinx sphinx-rtd-theme myst-parser
        
    - name: Build documentation
      run: |
        echo "Documentation build would go here"
        # sphinx-build -W -b html docs docs/_build/html
        
    - name: Upload docs artifacts
      uses: actions/upload-artifact@v3
      with:
        name: docs
        path: docs/_build/html/
        retention-days: 7