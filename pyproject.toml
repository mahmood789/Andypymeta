[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pymeta-suite"
version = "0.0.1"
description = "A comprehensive meta-analysis toolkit for Python"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "pymeta contributors"}
]
maintainers = [
    {name = "pymeta contributors"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0",
    "statsmodels>=0.13.0",
    "matplotlib>=3.5.0",
    "plotly>=5.0.0",
]

[project.optional-dependencies]
rve = [
    "scikit-learn>=1.0.0",
]
bayes = [
    "pymc>=5.0.0",
    "arviz>=0.12.0",
]
torch = [
    "torch>=1.10.0",
    "torchvision>=0.11.0",
]
xgb = [
    "xgboost>=1.5.0",
    "lightgbm>=3.3.0",
]
viz = [
    "seaborn>=0.11.0",
    "bokeh>=2.4.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=22.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "tox>=4.0.0",
]
all = [
    "pymeta-suite[rve,bayes,torch,xgb,viz,dev]"
]

[project.urls]
Homepage = "https://github.com/mahmood789/Andypymeta"
Repository = "https://github.com/mahmood789/Andypymeta"
Issues = "https://github.com/mahmood789/Andypymeta/issues"

[project.scripts]
pymeta = "pymeta.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=pymeta",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--maxfail=3",
]
testpaths = ["tests"]
markers = [
    "integration: integration tests (CLI, living reviews)",
    "slow: slow-fitting models (GLMM/Bayes/IPD)", 
    "viz: tests that open/save plots",
    "optional: tests for optional modules/extras",
    "unit: unit tests (default)",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src/pymeta"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.black]
target-version = ['py310']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "matplotlib.*", 
    "plotly.*",
    "statsmodels.*",
    "pymc.*",
    "arviz.*",
    "torch.*",
    "xgboost.*",
    "lightgbm.*",
    "seaborn.*",
    "bokeh.*",
]
ignore_missing_imports = true