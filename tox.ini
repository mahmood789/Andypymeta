[tox]
envlist = py{310,311,312}, coverage, docs, lint
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = Run unit tests with pytest
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-xdist>=3.0.0
    numpy>=1.21.0
    pandas>=1.3.0
    scipy>=1.7.0
    statsmodels>=0.13.0
    matplotlib>=3.5.0
    plotly>=5.0.0
commands = 
    # Run only unit tests by default (exclude slow, integration, viz, optional)
    pytest {posargs} -m "not slow and not integration and not viz and not optional" tests/unit/

[testenv:full]
description = Run all tests including slow, optional, and integration tests
deps = 
    {[testenv]deps}
    pymc>=5.0.0
    arviz>=0.12.0
    xgboost>=1.5.0
    scikit-learn>=1.0.0
commands = 
    pytest {posargs} tests/

[testenv:unit]
description = Run only unit tests (fast)
deps = {[testenv]deps}
commands = 
    pytest {posargs} -m "unit or not (slow or integration or viz or optional)" tests/unit/

[testenv:integration]
description = Run integration tests
deps = {[testenv]deps}
commands = 
    pytest {posargs} -m "integration" tests/integration/

[testenv:optional]
description = Run tests for optional dependencies
deps = 
    {[testenv]deps}
    pymc>=5.0.0
    arviz>=0.12.0
    xgboost>=1.5.0
    scikit-learn>=1.0.0
commands = 
    pytest {posargs} -m "optional" tests/optional/

[testenv:slow]
description = Run slow tests (GLMM, Bayesian models)
deps = 
    {[testenv]deps}
    pymc>=5.0.0
    arviz>=0.12.0
    statsmodels>=0.13.0
commands = 
    pytest {posargs} -m "slow" tests/

[testenv:viz]
description = Run visualization tests
deps = 
    {[testenv]deps}
    seaborn>=0.11.0
commands = 
    pytest {posargs} -m "viz" tests/

[testenv:coverage]
description = Generate coverage report
deps = 
    {[testenv]deps}
    coverage[toml]>=6.0
commands = 
    coverage run -m pytest tests/unit/
    coverage report
    coverage html
    coverage xml

[testenv:lint]
description = Run linting and formatting checks
deps = 
    ruff>=0.1.0
    black>=22.0.0
    mypy>=1.0.0
    types-requests
commands = 
    ruff check src/pymeta tests/
    black --check src/pymeta tests/
    mypy src/pymeta

[testenv:format]
description = Auto-format code
deps = 
    ruff>=0.1.0
    black>=22.0.0
commands = 
    ruff check --fix src/pymeta tests/
    black src/pymeta tests/

[testenv:docs]
description = Build documentation
deps = 
    sphinx>=4.0.0
    sphinx-rtd-theme
    myst-parser
changedir = docs
commands = 
    sphinx-build -W -b html . _build/html

[testenv:clean]
description = Clean up temporary files
deps = 
allowlist_externals = rm
commands = 
    rm -rf .tox
    rm -rf build
    rm -rf dist
    rm -rf *.egg-info
    rm -rf .coverage
    rm -rf htmlcov
    rm -rf .pytest_cache
    rm -rf .mypy_cache

# GitHub Actions specific environments
[testenv:py310-github]
description = Python 3.10 tests for GitHub Actions
deps = {[testenv]deps}
commands = 
    pytest -m "not slow and not optional and not viz" tests/

[testenv:py311-github] 
description = Python 3.11 tests for GitHub Actions
deps = {[testenv]deps}
commands = 
    pytest -m "not slow and not optional and not viz" tests/

[testenv:py312-github]
description = Python 3.12 tests for GitHub Actions  
deps = {[testenv]deps}
commands = 
    pytest -m "not slow and not optional and not viz" tests/